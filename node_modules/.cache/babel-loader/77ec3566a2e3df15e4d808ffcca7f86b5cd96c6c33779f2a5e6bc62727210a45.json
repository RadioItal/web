{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WORK 2020\\\\radioital\\\\desarrollo\\\\web\\\\src\\\\components\\\\Chat\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { query, collection, orderBy, onSnapshot, limit } from \"firebase/firestore\";\nimport { db, auth } from \"../../Firebase\";\nimport Message from \"./Message\";\nimport SendMessage from \"./SendMessage\";\nimport './Chat.css';\nimport Fab from '@mui/material/Fab';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  var _scroll$current2;\n  const [messages, setMessages] = useState([]);\n  const scroll = useRef();\n  const [toggle, setToggle] = useState(\"\");\n  const expand = toggle ? \"open\" : \"\";\n  /*\r\n  const listAllUsers = (nextPageToken) => {\r\n  // List batch of users, 1000 at a time.\r\n  getAuth()\r\n      .listUsers(1000, nextPageToken)\r\n      .then((listUsersResult) => {\r\n          listUsersResult.users.forEach((userRecord) => {\r\n              console.log('user', userRecord.toJSON());\r\n          });\r\n          if (listUsersResult.pageToken) {\r\n              // List next batch of users.\r\n              listAllUsers(listUsersResult.pageToken);\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          console.log('Error listing users:', error);\r\n      });\r\n  };\r\n  // Start listing users from the beginning, 1000 at a time.\r\n  listAllUsers();\r\n  */\n\n  useEffect(() => {\n    var _scroll$current;\n    const q = query(collection(db, \"messages\"), orderBy(\"createdAt\", \"desc\"), limit(50));\n    (_scroll$current = scroll.current) === null || _scroll$current === void 0 ? void 0 : _scroll$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n    const unsubscribe = onSnapshot(q, QuerySnapshot => {\n      const fetchedMessages = [];\n      QuerySnapshot.forEach(doc => {\n        fetchedMessages.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      const sortedMessages = fetchedMessages.sort((a, b) => a.createdAt - b.createdAt);\n      setMessages(sortedMessages);\n    });\n    return () => unsubscribe;\n  }, []);\n  (_scroll$current2 = scroll.current) === null || _scroll$current2 === void 0 ? void 0 : _scroll$current2.scrollIntoView({\n    behavior: \"smooth\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      className: \"btnChat\",\n      variant: \"extended\",\n      onClick: () => {\n        setToggle(!toggle);\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatIcon, {\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), !toggle ? \"ABRIR CHAT\" : \"CERRAR CHAT\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `navBox ${expand} chat-box`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat RadioItal.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-wrapper\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: scroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SendMessage, {\n        scroll: scroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBox, \"hYLAH5atFKTQrfB0xmDi+YcCcl4=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","query","collection","orderBy","onSnapshot","limit","db","auth","Message","SendMessage","Fab","ChatIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_s","_scroll$current2","messages","setMessages","scroll","toggle","setToggle","expand","_scroll$current","q","current","scrollIntoView","behavior","unsubscribe","QuerySnapshot","fetchedMessages","forEach","doc","push","data","id","sortedMessages","sort","a","b","createdAt","children","className","variant","onClick","sx","mr","fileName","_jsxFileName","lineNumber","columnNumber","map","message","ref","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/WORK 2020/radioital/desarrollo/web/src/components/Chat/Chatbox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  query,\r\n  collection,\r\n  orderBy,\r\n  onSnapshot,\r\n  limit,\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../../Firebase\";\r\nimport Message from \"./Message\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport './Chat.css';\r\nimport Fab from '@mui/material/Fab';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\n\r\nconst ChatBox = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const scroll = useRef();\r\n    const [toggle, setToggle] = useState(\"\");\r\n    const expand = toggle ? \"open\" : \"\";\r\n    /*\r\n    const listAllUsers = (nextPageToken) => {\r\n    // List batch of users, 1000 at a time.\r\n    getAuth()\r\n        .listUsers(1000, nextPageToken)\r\n        .then((listUsersResult) => {\r\n            listUsersResult.users.forEach((userRecord) => {\r\n                console.log('user', userRecord.toJSON());\r\n            });\r\n            if (listUsersResult.pageToken) {\r\n                // List next batch of users.\r\n                listAllUsers(listUsersResult.pageToken);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error listing users:', error);\r\n        });\r\n    };\r\n    // Start listing users from the beginning, 1000 at a time.\r\n    listAllUsers();\r\n    */\r\n\r\n    useEffect(() => {\r\n        const q = query(\r\n            collection(db, \"messages\"),\r\n            orderBy(\"createdAt\", \"desc\"),\r\n            limit(50)\r\n        );\r\n\r\n        scroll.current?.scrollIntoView({ behavior: 'smooth' });\r\n\r\n        const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n            const fetchedMessages = [];\r\n            QuerySnapshot.forEach((doc) => {\r\n                fetchedMessages.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            const sortedMessages = fetchedMessages.sort(\r\n                (a, b) => a.createdAt - b.createdAt\r\n            );\r\n            setMessages(sortedMessages);\r\n        });\r\n        return () => unsubscribe;\r\n    }, []);\r\n    scroll.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    return (\r\n        <>\r\n            <Fab className=\"btnChat\" variant=\"extended\" onClick={() => {\r\n                setToggle(!toggle);\r\n            } }>\r\n                <ChatIcon sx={{ mr: 1 }} />\r\n                {!toggle ? \"ABRIR CHAT\" : \"CERRAR CHAT\" }\r\n            </Fab>\r\n            <div className={`navBox ${expand} chat-box`}>\r\n                <h3>Chat RadioItal.com</h3>\r\n                <div className=\"messages-wrapper\">\r\n                    {messages.map((message) => (\r\n                        <Message key={message.id} message={message} />\r\n                        ))}\r\n                    <span ref={scroll}></span>  \r\n                </div>\r\n                {/* when a new message enters the chat, the screen scrolls down to the scroll div */}\r\n                <SendMessage scroll={scroll} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatBox; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SACEC,KAAK,EACLC,UAAU,EACVC,OAAO,EACPC,UAAU,EACVC,KAAK,QACA,oBAAoB;AAC3B,SAASC,EAAE,EAAEC,IAAI,QAAQ,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,MAAM,GAAGtB,MAAM,CAAC,CAAC;EACvB,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMwB,MAAM,GAAGF,MAAM,GAAG,MAAM,GAAG,EAAE;EACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEIxB,SAAS,CAAC,MAAM;IAAA,IAAA2B,eAAA;IACZ,MAAMC,CAAC,GAAGzB,KAAK,CACXC,UAAU,CAACI,EAAE,EAAE,UAAU,CAAC,EAC1BH,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,EAC5BE,KAAK,CAAC,EAAE,CACZ,CAAC;IAED,CAAAoB,eAAA,GAAAJ,MAAM,CAACM,OAAO,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IAEtD,MAAMC,WAAW,GAAG1B,UAAU,CAACsB,CAAC,EAAGK,aAAa,IAAK;MACjD,MAAMC,eAAe,GAAG,EAAE;MAC1BD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC3BF,eAAe,CAACG,IAAI,CAAC;UAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MACvD,CAAC,CAAC;MACF,MAAMC,cAAc,GAAGN,eAAe,CAACO,IAAI,CACvC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,SAAS,GAAGD,CAAC,CAACC,SAC9B,CAAC;MACDtB,WAAW,CAACkB,cAAc,CAAC;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMR,WAAW;EAC5B,CAAC,EAAE,EAAE,CAAC;EACN,CAAAZ,gBAAA,GAAAG,MAAM,CAACM,OAAO,cAAAT,gBAAA,uBAAdA,gBAAA,CAAgBU,cAAc,CAAC;IAAEC,QAAQ,EAAE;EAAS,CAAC,CAAC;EACtD,oBACIhB,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACI9B,OAAA,CAACH,GAAG;MAACkC,SAAS,EAAC,SAAS;MAACC,OAAO,EAAC,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAM;QACvDvB,SAAS,CAAC,CAACD,MAAM,CAAC;MACtB,CAAG;MAAAqB,QAAA,gBACC9B,OAAA,CAACF,QAAQ;QAACoC,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1B,CAAC9B,MAAM,GAAG,YAAY,GAAG,aAAa;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNvC,OAAA;MAAK+B,SAAS,EAAG,UAASpB,MAAO,WAAW;MAAAmB,QAAA,gBACxC9B,OAAA;QAAA8B,QAAA,EAAI;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BvC,OAAA;QAAK+B,SAAS,EAAC,kBAAkB;QAAAD,QAAA,GAC5BxB,QAAQ,CAACkC,GAAG,CAAEC,OAAO,iBAClBzC,OAAA,CAACL,OAAO;UAAkB8C,OAAO,EAAEA;QAAQ,GAA7BA,OAAO,CAACjB,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC5C,CAAC,eACNvC,OAAA;UAAM0C,GAAG,EAAElC;QAAO;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAENvC,OAAA,CAACJ,WAAW;QAACY,MAAM,EAAEA;MAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACnC,EAAA,CAtEID,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAwEb,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}